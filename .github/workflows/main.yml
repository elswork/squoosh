# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker:
    runs-on: ubuntu-latest
    environment: elsworkEnvironment
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DKHUBUSERNAME }}
          password: ${{ secrets.DKHUBTOKEN }}
      - 
        name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: elswork/squoosh
          labels: |
            maintainer=Eloy Lopez <elswork@gmail.com>
            org.opencontainers.image.description=squoosh-cli an experimental way to run all the codecs you know from the Squoosh
            org.opencontainers.image.vendor=Deft.Work
            org.opencontainers.image.url=https://deft.work/squoosh
            org.opencontainers.image.source=https://github.com/elswork/squoosh
            org.opencontainers.image.version=0.6.5
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x,linux/arm/v7,linux/arm/v6
          push: true
          #tags: elswork/squoosh:0.6.5, elswork/squoosh:latest
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
